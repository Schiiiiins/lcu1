#ifndef _CACHEDIMAGE_H_
#define _CACHEDIMAGE_H_

#include <string>
#include <directfb.h>

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Entry for the <see cref="UiManager" /> image cache.  </summary>
///
/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class CachedImage
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Default constructor. </summary>
	///
	/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	CachedImage();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Finaliser. </summary>
	///
	/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	~CachedImage();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Loads a PNG image from a file. </summary>
	///
	/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
	///
	/// <param name="dfb">	   	[in] The directFB interface. </param>
	/// <param name="filename">	Filename of the PNG file. Either absolute or relative to the 
	/// 						UI manager's description directory</param>
	///
	/// <returns>	true if it succeeds, false if it fails. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	bool Load(IDirectFB* dfb, const std::string& filename);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Renders the image onto a directFB surface. </summary>
	///
	/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
	///
	/// <param name="sfc">	[in] The directFB surface to render the image onto. </param>
	/// <param name="x">  	The x coordinate of the upper left corner. </param>
	/// <param name="y">  	The y coordinate of the upper left corner. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void Render(IDirectFBSurface* sfc, int x, int y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the width of the image in pixels. </summary>
	///
	/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
	///
	/// <returns>	The width in pixels. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	int GetWidth();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the height of the image in pixels. </summary>
	///
	/// <remarks>	Lars Reemts, 02.05.2011. </remarks>
	///
	/// <returns>	The height in pixels. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	int GetHeight();
protected:
	/// <summary> The memory surface the image is loaded into</summary>
	IDirectFBSurface *_imageSurface;
	/// <summary> The width of the image in pixels</summary>
	int _width;
	/// <summary> The height of the image in pixels</summary>
	int _height;
};

#endif
