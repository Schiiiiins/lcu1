$Id: CHANGELOG 6620 2007-01-22 23:56:41Z bmc $

Changes in version 1.5.1:

- Now released under BSD-style license, not GNU Public License.


Changes in version 1.5:

- daemonize can now optionally redirect the daemon's standard output and
  standard error to files

- configure now supports a local basename() emulator.


Changes in version 1.4:

- Version of daemon(3) shipped with daemonize attempted to redirect
  stdin, stdout and stderr to /dev/null, by closing all file descriptors
  (using sysconf(_SC_OPEN_MAX) to determine the maximum file descriptor).
  This method wasn't working, and apparently the forked daemon process
  was reacquiring (or still had) valid stdin, stdout and stderr file
  descriptors. I made some changes to daemon.c to be more consistent with
  how the native FreeBSD and Linux versions behave.

  This bug may have contributed to a problem on AIX. According to
  Ron Avriel <ron /at/ cti2 /dot/ com>, when he telnets to an AIX 5.2
  system and uses daemonize create a daemon, he can't log out of the telnet
  session (i.e., the logout operation hangs) until he kills the daemon.
  That observation is consistent with the theory that the daemon process is
  still holding open the controlling terminal.

- daemonize now installs with 0755 permissions, instead of 0700.


Changes in version 1.3:

- The "-c" option now actually works. Duh.


Changes in version 1.2:

- The external names in getopt.c are now prefixed with "x_" (e.g.,
  x_getopt(), x_opterr, etc.). The function's name has been changed to
  avoid type conflicts with the native getopt() on the host operating
  system. (This is known to happen on Solaris 8, for instance.) Thanks
  to Michael Fuchs <mf /at/ mfox /dot/ de> for pointing out the problem
  on Solaris.


Changes in version 1.1:

- Now uses local getopt.c unconditionally, instead of defaulting to
  whatever's on the system. This gets around a problem when installing on
  systems with GNU getopt (e.g., Linux). Unless POSIXLY_CORRECT is set in
  the environment, GNU getopt scans the entire command line, which means
  it'll complain about "unknown options" that are specified in the command
  being passed to daemonize. One solution is to have daemonize set
  POSIXLY_CORRECT right before calling getopt() (and then restore it before
  running the program-to-daemonize, in case it might affect that program's
  behavior). However, it's just simpler to use the old, public domain
  getopt routine.

- daemonize now verifies that the program actually exists before
  daemonizing. (It didn't check before.)
