<ui>
  <page id="iocontroller" font="fonts/decker.ttf" font_height="16" onload="OnPageLoad">
    <elements>
      <image id="background" x="0" y="0" file="images/background.png"/>
      <image id="logo" x="5" y="5" file="images/logo.png"/>
      
      <text id="title" x="232" y="7" height="15" text="Regler" center="true"/>
      <text id="subtitle" x="232" y="22" height="15" center="true"/>
      
      <text id="label_threshold" x="10" y="53" text="Schwellwert:"/>
      <image id="box_threshold" x="118" y="47" file="images/textbox_64.png" onclick="code:OnValueClick"/>
      <text id="threshold" x="150" y="52" text="0" center="true"/>
      <text id="unit_threshold" x="185" y="53" text="mV"/>
      <image id="threshold_up" x="232" y="45" file="images/arrow_u.png" onclick="code:OnValueStepClick"/>
      <image id="threshold_down" x="272" y="45" file="images/arrow_d.png" onclick="code:OnValueStepClick"/>
      
      <text id="label_hysteresis" x="10" y="92" text="Hysterese:"/>
      <image id="box_hysteresis" x="118" y="86" file="images/textbox_64.png" onclick="code:OnValueClick"/>
      <text id="hysteresis" x="150" y="91" text="500" center="true"/>
      <text id="unit_hysteresis" x="186" y="92" height="14" text="mV"/>
      <image id="hysteresis_up" x="232" y="84" file="images/arrow_u.png" onclick="code:OnValueStepClick"/>
      <image id="hysteresis_down" x="272" y="84" file="images/arrow_d.png" onclick="code:OnValueStepClick"/>
      
      <text id="label_adc" x="10" y="131" text="ADC:"/>
      <image id="box_adc" x="88" y="125" file="images/textbox_48.png" onclick="code:OnValueClick"/>
      <text id="adc" x="112" y="130" text="0" center="true"/>
      <text id="adc_value" x="140" y="130" text=""/>
      <image id="adc_up" x="232" y="123" file="images/arrow_u.png" onclick="code:OnValueStepClick"/>
      <image id="adc_down" x="272" y="123" file="images/arrow_d.png" onclick="code:OnValueStepClick"/>
      
      <image id="check_cooling" x="-2" y="155" onclick="code:OnCheckClick">
            <file>images/checkbox_off.png</file>
            <file>images/checkbox_on.png</file>
      </image>
      <text id="label_cooling" x="39" y="169" text="Kühlbetrieb"/>

      <image id="back" x="10" y="199" file="images/button_140.png" onclick="code:OnCancelClick"/>
      <text x="77" y="206" text="Zurück" center="true"/>

      <image id="ok" x="165" y="199" file="images/button_140.png" onclick="code:OnOkClick"/>
      <text x="232" y="206" text="Bestätigen" center="true"/>
      
    </elements>
    <triggers>
        <trigger value="intInOnboardADC_0" method="OnAdcChanged"/>
        <trigger value="intInOnboardADC_1" method="OnAdcChanged"/>
    </triggers>
        <code><![CDATA[
    
        variable relay_index 0
        variable VALUE_RANGE
        array set VALUE_RANGE {
            threshold { 0 10000 100 }
            hysteresis { 0 10000 100 }
            adc { 0 1 1 }
        }
        
        
        proc OnPageLoad { previousPage reason } {
            variable numpad_control
            variable relay_index
            
            if { "$previousPage" == "numpad" } {
                ui set ${numpad_control}.text $numpad::value
                if { "$numpad_control" == "adc" } {
                    OnAdcChanged intInOnboardADC_$numpad::value [control get intInOnboardADC_$numpad::value]
                }
                
            } else {
                ui set threshold.text [control get intUiRelayControllerThreshold_${relay_index}]
                ui set hysteresis.text [control get intUiRelayControllerHysteresis_${relay_index}]
                set adc_index [control get intUiRelayControllerAdcIndex_${relay_index}]
                ui set adc.text $adc_index
                ui set check_cooling.index [control get binUiRelayControllerCooling_${relay_index}]
                OnAdcChanged intInOnboardADC_${adc_index} [control get intInOnboardADC_${adc_index}]
            }
        }
        
        proc OnValueClick { control } {
            variable numpad_control
            variable VALUE_RANGE
            
            set numpad_control [string range $control 4 end]
            set range $VALUE_RANGE($numpad_control)
            set numpad::min [lindex $range 0]
            set numpad::max [lindex $range 1]
            
            set numpad::value [ui get ${numpad_control}.text]
            ui set numpad.title.text [ui get title.text]
            set subtitle [lindex [split [ui get label_${numpad_control}.text] :] 0]
            ui set numpad.subtitle.text $subtitle
            ui load numpad
        }
        
        proc OnValueStepClick { control } {
            variable VALUE_RANGE
            set value_control [lindex [split $control _] 0]
            set range $VALUE_RANGE($value_control)
            set min [lindex $range 0]
            set max [lindex $range 1]
            set step [lindex $range 2]
            if { [string first down $control] >= 0 } {
                set step -$step
            }
            set value [ui get ${value_control}.text]
            incr value $step
            if { $value < $min } { set value $min }
            if { $value > $max } { set value $max }
            ui set ${value_control}.text $value
            if { "$value_control" == "adc" } {
                OnAdcChanged intInOnboardADC_${value} [control get intInOnboardADC_${value}]
            }
        }

        proc OnCheckClick { control } {
            ui set ${control}.index [expr ![ui get ${control}.index] ]
        }
        
        proc OnOkClick { control } {
            variable relay_index
                
            control set intUiRelayControllerThreshold_${relay_index} [ui get threshold.text]
            control set intUiRelayControllerHysteresis_${relay_index} [ui get hysteresis.text]
            control set intUiRelayControllerAdcIndex_${relay_index} [ui get adc.text]
            control set binUiRelayControllerCooling_${relay_index} [ui get check_cooling.index]
            ui back
        }
        
        proc OnAdcChanged { valueId value } {
            set adc_index [ui get adc.text]
            if { "$valueId" == "intInOnboardADC_${adc_index}" } {
                ui set adc_value.text "(${value}mV)"
            }
        }
        
        proc OnCancelClick { control } {
            ui back
        }
        
    ]]></code>
  </page>
</ui>
