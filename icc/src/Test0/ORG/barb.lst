******* ./Test0/barb.ic ************************
001	/********************************************************************
002	 *
003	 *	barb.ica - vertical bar demo
004	 *
005	 *	with arrays to get variable length counters
006	 *		    and multiple instances
007	 *
008	 *	QX0 outputs the value of a shift register made up of SR flip
009	 *	flops m0 to m7. These are clocked by an internally generated
010	 *	clock c0. It looks like running lights when displayed.
011	 *
012	 *	By changing the input IB1 the clocking speed on m0 to m7,
013	 *	which is output on QX0.0 to QX0.7 is set to IB1 * 50 ms.
014	 *	A value of 0 on input IB1 lets you clock the running
015	 *	lights manually via input IX0.0
016	 *
017	 *	Output QX2.0 indicates the direction of the running
018	 *	lights on QmX0 - just to show a bit of internal logic.
019	 *
020	 *******************************************************************/
021
022	use strict;
023
024	imm timer t = TIMER(TX0.4);

	t_1     T ---!  t       !

	iClock  : ---|  t_1     T
	TX0.4     ---|

025
026	imm int d0 = IB1;			// IB1 =

	IB1     A ---@  d0      A

027	imm bit f0 = IB1;			// d0  =

	IB1     A ---+  f0              IB1     // 1

028
029	imm bit b0 = D(~b0 & f0, t, d0) | CHANGE(IX0.0 & ~f0);

	b0_1      ---|  b0
	b0_2      ---|

	b0_4    D ---#  b0_1

	b0_3    V --->  b0_2

	iClock  : ---&  b0_3    V
	IX0.0     ---&
	f0      ~ ---&

	t       ! ---&  b0_4    D
	IB1     A<---&
	b0      ~ ---&
	f0        ---&

030	imm clock c0 = CLOCK(b0);

	c0_1    C ---:  c0      :

	iClock  : ---|  c0_1    C
	b0        ---|

031
032	imm bit m0;
033	imm bit m1;
034	imm bit m2;
035	imm bit m3;
036	imm bit m4;
037	imm bit m5;
038	imm bit m6;
039	imm bit m7;
040	imm bit m8;
041
042	m0 = SR(~m8     , m8 & ~m1, c0);

	m0_1    S ---#  m0
	m0_2    R ---#

	c0      : ---|  m0_1    S
	m8      ~ ---|

	c0      : ---&  m0_2    R
	m8        ---&
	m1      ~ ---&

043	m1 = SR(~m8 & m0, m8 & ~m2, c0);

	m1_1    S ---#  m1
	m1_2    R ---#

	c0      : ---&  m1_1    S
	m8      ~ ---&
	m0        ---&

	c0      : ---&  m1_2    R
	m8        ---&
	m2      ~ ---&

044	m2 = SR(~m8 & m1, m8 & ~m3, c0);

	m2_1    S ---#  m2
	m2_2    R ---#

	c0      : ---&  m2_1    S
	m8      ~ ---&
	m1        ---&

	c0      : ---&  m2_2    R
	m8        ---&
	m3      ~ ---&

045	m3 = SR(~m8 & m2, m8 & ~m4, c0);

	m3_1    S ---#  m3
	m3_2    R ---#

	c0      : ---&  m3_1    S
	m8      ~ ---&
	m2        ---&

	c0      : ---&  m3_2    R
	m8        ---&
	m4      ~ ---&

046	m4 = SR(~m8 & m3, m8 & ~m5, c0);

	m4_1    S ---#  m4
	m4_2    R ---#

	c0      : ---&  m4_1    S
	m8      ~ ---&
	m3        ---&

	c0      : ---&  m4_2    R
	m8        ---&
	m5      ~ ---&

047	m5 = SR(~m8 & m4, m8 & ~m6, c0);

	m5_1    S ---#  m5
	m5_2    R ---#

	c0      : ---&  m5_1    S
	m8      ~ ---&
	m4        ---&

	c0      : ---&  m5_2    R
	m8        ---&
	m6      ~ ---&

048	m6 = SR(~m8 & m5, m8 & ~m7, c0);

	m6_1    S ---#  m6
	m6_2    R ---#

	c0      : ---&  m6_1    S
	m8      ~ ---&
	m5        ---&

	c0      : ---&  m6_2    R
	m8        ---&
	m7      ~ ---&

049	m7 = SR(~m8 & m6, m8      , c0);

	m7_1    S ---#  m7
	m7_2    R ---#

	c0      : ---&  m7_1    S
	m8      ~ ---&
	m6        ---&

	c0      : ---|  m7_2    R
	m8        ---|

050	m8 = SR(~m8 & m7, m8 & ~m0, c0);

	m8_1    S ---#  m8
	m8_2    R ---#

	c0      : ---&  m8_1    S
	m8      ~ ---&
	m7        ---&

	c0      : ---&  m8_2    R
	m8        ---&
	m0      ~ ---&

051
052	QX0.0 = m0;

	m0        ---@  QX0.0


	m0        ---|  QX0.0_0 X

053	QX0.1 = m1;

	m1        ---@  QX0.1


	m1        ---|  QX0.1_0 X

054	QX0.2 = m2;

	m2        ---@  QX0.2


	m2        ---|  QX0.2_0 X

055	QX0.3 = m3;

	m3        ---@  QX0.3


	m3        ---|  QX0.3_0 X

056	QX0.4 = m4;

	m4        ---@  QX0.4


	m4        ---|  QX0.4_0 X

057	QX0.5 = m5;

	m5        ---@  QX0.5


	m5        ---|  QX0.5_0 X

058	QX0.6 = m6;

	m6        ---@  QX0.6


	m6        ---|  QX0.6_0 X

059	QX0.7 = m7;

	m7        ---@  QX0.7


	m7        ---|  QX0.7_0 X

060	QX1.0 = m8;

	m8        ---@  QX1.0


	m8        ---|  QX1.0_0 X

061
062	imm int d1 = IB3;			// IB3 =

	IB3     A ---@  d1      A

063	imm bit f1 = IB3;			// d1  =

	IB3     A ---+  f1              IB3     // 1

064
065	imm bit b1 = D(~b1 & f1, t, d1) | CHANGE(IX0.0 & ~f1);

	b1_1      ---|  b1
	b1_2      ---|

	b1_4    D ---#  b1_1

	b1_3    V --->  b1_2

	iClock  : ---&  b1_3    V
	IX0.0     ---&
	f1      ~ ---&

	t       ! ---&  b1_4    D
	IB3     A<---&
	b1      ~ ---&
	f1        ---&

066	imm clock c1 = CLOCK(b1);

	c1_1    C ---:  c1      :

	iClock  : ---|  c1_1    C
	b1        ---|

067
068	imm bit m16;
069	imm bit m17;
070	imm bit m18;
071	imm bit m19;
072	imm bit m20;
073	imm bit m21;
074	imm bit m22;
075	imm bit m23;
076	imm bit m24;
077
078	m16 = SR(~m24     , m24 & ~m17, c1);

	m16_1   S ---#  m16
	m16_2   R ---#

	c1      : ---|  m16_1   S
	m24     ~ ---|

	c1      : ---&  m16_2   R
	m24       ---&
	m17     ~ ---&

079	m17 = SR(~m24 & m16, m24 & ~m18, c1);

	m17_1   S ---#  m17
	m17_2   R ---#

	c1      : ---&  m17_1   S
	m24     ~ ---&
	m16       ---&

	c1      : ---&  m17_2   R
	m24       ---&
	m18     ~ ---&

080	m18 = SR(~m24 & m17, m24 & ~m19, c1);

	m18_1   S ---#  m18
	m18_2   R ---#

	c1      : ---&  m18_1   S
	m24     ~ ---&
	m17       ---&

	c1      : ---&  m18_2   R
	m24       ---&
	m19     ~ ---&

081	m19 = SR(~m24 & m18, m24 & ~m20, c1);

	m19_1   S ---#  m19
	m19_2   R ---#

	c1      : ---&  m19_1   S
	m24     ~ ---&
	m18       ---&

	c1      : ---&  m19_2   R
	m24       ---&
	m20     ~ ---&

082	m20 = SR(~m24 & m19, m24 & ~m21, c1);

	m20_1   S ---#  m20
	m20_2   R ---#

	c1      : ---&  m20_1   S
	m24     ~ ---&
	m19       ---&

	c1      : ---&  m20_2   R
	m24       ---&
	m21     ~ ---&

083	m21 = SR(~m24 & m20, m24 & ~m22, c1);

	m21_1   S ---#  m21
	m21_2   R ---#

	c1      : ---&  m21_1   S
	m24     ~ ---&
	m20       ---&

	c1      : ---&  m21_2   R
	m24       ---&
	m22     ~ ---&

084	m22 = SR(~m24 & m21, m24 & ~m23, c1);

	m22_1   S ---#  m22
	m22_2   R ---#

	c1      : ---&  m22_1   S
	m24     ~ ---&
	m21       ---&

	c1      : ---&  m22_2   R
	m24       ---&
	m23     ~ ---&

085	m23 = SR(~m24 & m22, m24      , c1);

	m23_1   S ---#  m23
	m23_2   R ---#

	c1      : ---&  m23_1   S
	m24     ~ ---&
	m22       ---&

	c1      : ---|  m23_2   R
	m24       ---|

086	m24 = SR(~m24 & m23, m24 & ~m16, c1);

	m24_1   S ---#  m24
	m24_2   R ---#

	c1      : ---&  m24_1   S
	m24     ~ ---&
	m23       ---&

	c1      : ---&  m24_2   R
	m24       ---&
	m16     ~ ---&

087
088	QX2.0 = m16;

	m16       ---@  QX2.0


	m16       ---|  QX2.0_0 X

089	QX2.1 = m17;

	m17       ---@  QX2.1


	m17       ---|  QX2.1_0 X

090	QX2.2 = m18;

	m18       ---@  QX2.2


	m18       ---|  QX2.2_0 X

091	QX2.3 = m19;

	m19       ---@  QX2.3


	m19       ---|  QX2.3_0 X

092	QX2.4 = m20;

	m20       ---@  QX2.4


	m20       ---|  QX2.4_0 X

093	QX2.5 = m21;

	m21       ---@  QX2.5


	m21       ---|  QX2.5_0 X

094	QX2.6 = m22;

	m22       ---@  QX2.6


	m22       ---|  QX2.6_0 X

095	QX2.7 = m23;

	m23       ---@  QX2.7


	m23       ---|  QX2.7_0 X

096	QX3.0 = m24;

	m24       ---@  QX3.0


	m24       ---|  QX3.0_0 X

097
098	imm int d2 = IB5;			// IB5 =

	IB5     A ---@  d2      A

099	imm bit f2 = IB5;			// d2  =

	IB5     A ---+  f2              IB5     // 1

100
101	imm bit b2 = D(~b2 & f2, t, d2) | CHANGE(IX0.0 & ~f2);

	b2_1      ---|  b2
	b2_2      ---|

	b2_4    D ---#  b2_1

	b2_3    V --->  b2_2

	iClock  : ---&  b2_3    V
	IX0.0     ---&
	f2      ~ ---&

	t       ! ---&  b2_4    D
	IB5     A<---&
	b2      ~ ---&
	f2        ---&

102	imm clock c2 = CLOCK(b2);

	c2_1    C ---:  c2      :

	iClock  : ---|  c2_1    C
	b2        ---|

103
104	imm bit m32;
105	imm bit m33;
106	imm bit m34;
107	imm bit m35;
108	imm bit m36;
109	imm bit m37;
110	imm bit m38;
111	imm bit m39;
112	imm bit m40;
113
114	m32 = SR(~m40     , m40 & ~m33, c2);

	m32_1   S ---#  m32
	m32_2   R ---#

	c2      : ---|  m32_1   S
	m40     ~ ---|

	c2      : ---&  m32_2   R
	m40       ---&
	m33     ~ ---&

115	m33 = SR(~m40 & m32, m40 & ~m34, c2);

	m33_1   S ---#  m33
	m33_2   R ---#

	c2      : ---&  m33_1   S
	m40     ~ ---&
	m32       ---&

	c2      : ---&  m33_2   R
	m40       ---&
	m34     ~ ---&

116	m34 = SR(~m40 & m33, m40 & ~m35, c2);

	m34_1   S ---#  m34
	m34_2   R ---#

	c2      : ---&  m34_1   S
	m40     ~ ---&
	m33       ---&

	c2      : ---&  m34_2   R
	m40       ---&
	m35     ~ ---&

117	m35 = SR(~m40 & m34, m40 & ~m36, c2);

	m35_1   S ---#  m35
	m35_2   R ---#

	c2      : ---&  m35_1   S
	m40     ~ ---&
	m34       ---&

	c2      : ---&  m35_2   R
	m40       ---&
	m36     ~ ---&

118	m36 = SR(~m40 & m35, m40 & ~m37, c2);

	m36_1   S ---#  m36
	m36_2   R ---#

	c2      : ---&  m36_1   S
	m40     ~ ---&
	m35       ---&

	c2      : ---&  m36_2   R
	m40       ---&
	m37     ~ ---&

119	m37 = SR(~m40 & m36, m40 & ~m38, c2);

	m37_1   S ---#  m37
	m37_2   R ---#

	c2      : ---&  m37_1   S
	m40     ~ ---&
	m36       ---&

	c2      : ---&  m37_2   R
	m40       ---&
	m38     ~ ---&

120	m38 = SR(~m40 & m37, m40 & ~m39, c2);

	m38_1   S ---#  m38
	m38_2   R ---#

	c2      : ---&  m38_1   S
	m40     ~ ---&
	m37       ---&

	c2      : ---&  m38_2   R
	m40       ---&
	m39     ~ ---&

121	m39 = SR(~m40 & m38, m40      , c2);

	m39_1   S ---#  m39
	m39_2   R ---#

	c2      : ---&  m39_1   S
	m40     ~ ---&
	m38       ---&

	c2      : ---|  m39_2   R
	m40       ---|

122	m40 = SR(~m40 & m39, m40 & ~m32, c2);

	m40_1   S ---#  m40
	m40_2   R ---#

	c2      : ---&  m40_1   S
	m40     ~ ---&
	m39       ---&

	c2      : ---&  m40_2   R
	m40       ---&
	m32     ~ ---&

123
124	QX4.0 = m32;

	m32       ---@  QX4.0


	m32       ---|  QX4.0_0 X

125	QX4.1 = m33;

	m33       ---@  QX4.1


	m33       ---|  QX4.1_0 X

126	QX4.2 = m34;

	m34       ---@  QX4.2


	m34       ---|  QX4.2_0 X

127	QX4.3 = m35;

	m35       ---@  QX4.3


	m35       ---|  QX4.3_0 X

128	QX4.4 = m36;

	m36       ---@  QX4.4


	m36       ---|  QX4.4_0 X

129	QX4.5 = m37;

	m37       ---@  QX4.5


	m37       ---|  QX4.5_0 X

130	QX4.6 = m38;

	m38       ---@  QX4.6


	m38       ---|  QX4.6_0 X

131	QX4.7 = m39;

	m39       ---@  QX4.7


	m39       ---|  QX4.7_0 X

132	QX5.0 = m40;

	m40       ---@  QX5.0


	m40       ---|  QX5.0_0 X

133
134	imm int d3 = IB7;			// IB7 =

	IB7     A ---@  d3      A

135	imm bit f3 = IB7;			// d3  =

	IB7     A ---+  f3              IB7     // 1

136
137	imm bit b3 = D(~b3 & f3, t, d3) | CHANGE(IX0.0 & ~f3);

	b3_1      ---|  b3
	b3_2      ---|

	b3_4    D ---#  b3_1

	b3_3    V --->  b3_2

	iClock  : ---&  b3_3    V
	IX0.0     ---&
	f3      ~ ---&

	t       ! ---&  b3_4    D
	IB7     A<---&
	b3      ~ ---&
	f3        ---&

138	imm clock c3 = CLOCK(b3);

	c3_1    C ---:  c3      :

	iClock  : ---|  c3_1    C
	b3        ---|

139
140	imm bit m48;
141	imm bit m49;
142	imm bit m50;
143	imm bit m51;
144	imm bit m52;
145	imm bit m53;
146	imm bit m54;
147	imm bit m55;
148	imm bit m56;
149
150	m48 = SR(~m56     , m56 & ~m49, c3);

	m48_1   S ---#  m48
	m48_2   R ---#

	c3      : ---|  m48_1   S
	m56     ~ ---|

	c3      : ---&  m48_2   R
	m56       ---&
	m49     ~ ---&

151	m49 = SR(~m56 & m48, m56 & ~m50, c3);

	m49_1   S ---#  m49
	m49_2   R ---#

	c3      : ---&  m49_1   S
	m56     ~ ---&
	m48       ---&

	c3      : ---&  m49_2   R
	m56       ---&
	m50     ~ ---&

152	m50 = SR(~m56 & m49, m56 & ~m51, c3);

	m50_1   S ---#  m50
	m50_2   R ---#

	c3      : ---&  m50_1   S
	m56     ~ ---&
	m49       ---&

	c3      : ---&  m50_2   R
	m56       ---&
	m51     ~ ---&

153	m51 = SR(~m56 & m50, m56 & ~m52, c3);

	m51_1   S ---#  m51
	m51_2   R ---#

	c3      : ---&  m51_1   S
	m56     ~ ---&
	m50       ---&

	c3      : ---&  m51_2   R
	m56       ---&
	m52     ~ ---&

154	m52 = SR(~m56 & m51, m56 & ~m53, c3);

	m52_1   S ---#  m52
	m52_2   R ---#

	c3      : ---&  m52_1   S
	m56     ~ ---&
	m51       ---&

	c3      : ---&  m52_2   R
	m56       ---&
	m53     ~ ---&

155	m53 = SR(~m56 & m52, m56 & ~m54, c3);

	m53_1   S ---#  m53
	m53_2   R ---#

	c3      : ---&  m53_1   S
	m56     ~ ---&
	m52       ---&

	c3      : ---&  m53_2   R
	m56       ---&
	m54     ~ ---&

156	m54 = SR(~m56 & m53, m56 & ~m55, c3);

	m54_1   S ---#  m54
	m54_2   R ---#

	c3      : ---&  m54_1   S
	m56     ~ ---&
	m53       ---&

	c3      : ---&  m54_2   R
	m56       ---&
	m55     ~ ---&

157	m55 = SR(~m56 & m54, m56      , c3);

	m55_1   S ---#  m55
	m55_2   R ---#

	c3      : ---&  m55_1   S
	m56     ~ ---&
	m54       ---&

	c3      : ---|  m55_2   R
	m56       ---|

158	m56 = SR(~m56 & m55, m56 & ~m48, c3);

	m56_1   S ---#  m56
	m56_2   R ---#

	c3      : ---&  m56_1   S
	m56     ~ ---&
	m55       ---&

	c3      : ---&  m56_2   R
	m56       ---&
	m48     ~ ---&

159
160	QX6.0 = m48;

	m48       ---@  QX6.0


	m48       ---|  QX6.0_0 X

161	QX6.1 = m49;

	m49       ---@  QX6.1


	m49       ---|  QX6.1_0 X

162	QX6.2 = m50;

	m50       ---@  QX6.2


	m50       ---|  QX6.2_0 X

163	QX6.3 = m51;

	m51       ---@  QX6.3


	m51       ---|  QX6.3_0 X

164	QX6.4 = m52;

	m52       ---@  QX6.4


	m52       ---|  QX6.4_0 X

165	QX6.5 = m53;

	m53       ---@  QX6.5


	m53       ---|  QX6.5_0 X

166	QX6.6 = m54;

	m54       ---@  QX6.6


	m54       ---|  QX6.6_0 X

167	QX6.7 = m55;

	m55       ---@  QX6.7


	m55       ---|  QX6.7_0 X

168	QX7.0 = m56;

	m56       ---@  QX7.0


	m56       ---|  QX7.0_0 X


******* NET TOPOLOGY    ************************

IB1     [  A  f0+    <b0_4&
IB3     [  A  f1+    <b1_4&
IB5     [  A  f2+    <b2_4&
IB7     [  A  f3+    <b3_4&
IX0.0   <     b0_3&   b1_3&   b2_3&   b3_3&
QX0.0   @     m0#
QX0.0_0 |  X
QX0.1   @     m1#
QX0.1_0 |  X
QX0.2   @     m2#
QX0.2_0 |  X
QX0.3   @     m3#
QX0.3_0 |  X
QX0.4   @     m4#
QX0.4_0 |  X
QX0.5   @     m5#
QX0.5_0 |  X
QX0.6   @     m6#
QX0.6_0 |  X
QX0.7   @     m7#
QX0.7_0 |  X
QX1.0   @     m8#
QX1.0_0 |  X
QX2.0   @     m16#
QX2.0_0 |  X
QX2.1   @     m17#
QX2.1_0 |  X
QX2.2   @     m18#
QX2.2_0 |  X
QX2.3   @     m19#
QX2.3_0 |  X
QX2.4   @     m20#
QX2.4_0 |  X
QX2.5   @     m21#
QX2.5_0 |  X
QX2.6   @     m22#
QX2.6_0 |  X
QX2.7   @     m23#
QX2.7_0 |  X
QX3.0   @     m24#
QX3.0_0 |  X
QX4.0   @     m32#
QX4.0_0 |  X
QX4.1   @     m33#
QX4.1_0 |  X
QX4.2   @     m34#
QX4.2_0 |  X
QX4.3   @     m35#
QX4.3_0 |  X
QX4.4   @     m36#
QX4.4_0 |  X
QX4.5   @     m37#
QX4.5_0 |  X
QX4.6   @     m38#
QX4.6_0 |  X
QX4.7   @     m39#
QX4.7_0 |  X
QX5.0   @     m40#
QX5.0_0 |  X
QX6.0   @     m48#
QX6.0_0 |  X
QX6.1   @     m49#
QX6.1_0 |  X
QX6.2   @     m50#
QX6.2_0 |  X
QX6.3   @     m51#
QX6.3_0 |  X
QX6.4   @     m52#
QX6.4_0 |  X
QX6.5   @     m53#
QX6.5_0 |  X
QX6.6   @     m54#
QX6.6_0 |  X
QX6.7   @     m55#
QX6.7_0 |  X
QX7.0   @     m56#
QX7.0_0 |  X
TX0.4   <     t_1|
b0      |    ~b0_4&   c0_1|
b0_1    #     b0|
b0_2    >     b0|
b0_3    &  V  b0_2>
b0_4    &  D  b0_1#
b1      |    ~b1_4&   c1_1|
b1_1    #     b1|
b1_2    >     b1|
b1_3    &  V  b1_2>
b1_4    &  D  b1_1#
b2      |    ~b2_4&   c2_1|
b2_1    #     b2|
b2_2    >     b2|
b2_3    &  V  b2_2>
b2_4    &  D  b2_1#
b3      |    ~b3_4&   c3_1|
b3_1    #     b3|
b3_2    >     b3|
b3_3    &  V  b3_2>
b3_4    &  D  b3_1#
c0      :  :  m0_1|   m0_2&   m1_2&   m1_1&   m2_2&   m2_1&   m3_2&   m3_1&
              m4_2&   m4_1&   m5_2&   m5_1&   m6_2&   m6_1&   m7_2|   m7_1&
              m8_2&   m8_1&
c0_1    |  C  c0:
c1      :  :  m16_1|  m16_2&  m17_2&  m17_1&  m18_2&  m18_1&  m19_2&  m19_1&
              m20_2&  m20_1&  m21_2&  m21_1&  m22_2&  m22_1&  m23_2|  m23_1&
              m24_2&  m24_1&
c1_1    |  C  c1:
c2      :  :  m32_1|  m32_2&  m33_2&  m33_1&  m34_2&  m34_1&  m35_2&  m35_1&
              m36_2&  m36_1&  m37_2&  m37_1&  m38_2&  m38_1&  m39_2|  m39_1&
              m40_2&  m40_1&
c2_1    |  C  c2:
c3      :  :  m48_1|  m48_2&  m49_2&  m49_1&  m50_2&  m50_1&  m51_2&  m51_1&
              m52_2&  m52_1&  m53_2&  m53_1&  m54_2&  m54_1&  m55_2|  m55_1&
              m56_2&  m56_1&
c3_1    |  C  c3:
d0      @  A  IB1[
d1      @  A  IB3[
d2      @  A  IB5[
d3      @  A  IB7[
f0      +    ~b0_3&   b0_4&
f1      +    ~b1_3&   b1_4&
f2      +    ~b2_3&   b2_4&
f3      +    ~b3_3&   b3_4&
iClock  :  :  t_1|    b0_3&   c0_1|   b1_3&   c1_1|   b2_3&   c2_1|   b3_3&
              c3_1|
m0      #     m1_1&    ~m8_2&     QX0.0_0|
m0_1    |  S  m0#
m0_2    &  R  m0#
m1      #    ~m0_2&     m2_1&     QX0.1_0|
m16     #     m17_1&   ~m24_2&    QX2.0_0|
m16_1   |  S  m16#
m16_2   &  R  m16#
m17     #    ~m16_2&    m18_1&    QX2.1_0|
m17_1   &  S  m17#
m17_2   &  R  m17#
m18     #    ~m17_2&    m19_1&    QX2.2_0|
m18_1   &  S  m18#
m18_2   &  R  m18#
m19     #    ~m18_2&    m20_1&    QX2.3_0|
m19_1   &  S  m19#
m19_2   &  R  m19#
m1_1    &  S  m1#
m1_2    &  R  m1#
m2      #    ~m1_2&     m3_1&     QX0.2_0|
m20     #    ~m19_2&    m21_1&    QX2.4_0|
m20_1   &  S  m20#
m20_2   &  R  m20#
m21     #    ~m20_2&    m22_1&    QX2.5_0|
m21_1   &  S  m21#
m21_2   &  R  m21#
m22     #    ~m21_2&    m23_1&    QX2.6_0|
m22_1   &  S  m22#
m22_2   &  R  m22#
m23     #    ~m22_2&    m24_1&    QX2.7_0|
m23_1   &  S  m23#
m23_2   |  R  m23#
m24     #    ~m16_1|    m16_2&    m17_2&   ~m17_1&    m18_2&   ~m18_1&    m19_2&   ~m19_1&
              m20_2&   ~m20_1&    m21_2&   ~m21_1&    m22_2&   ~m22_1&    m23_2|   ~m23_1&
              m24_2&   ~m24_1&    QX3.0_0|
m24_1   &  S  m24#
m24_2   &  R  m24#
m2_1    &  S  m2#
m2_2    &  R  m2#
m3      #    ~m2_2&     m4_1&     QX0.3_0|
m32     #     m33_1&   ~m40_2&    QX4.0_0|
m32_1   |  S  m32#
m32_2   &  R  m32#
m33     #    ~m32_2&    m34_1&    QX4.1_0|
m33_1   &  S  m33#
m33_2   &  R  m33#
m34     #    ~m33_2&    m35_1&    QX4.2_0|
m34_1   &  S  m34#
m34_2   &  R  m34#
m35     #    ~m34_2&    m36_1&    QX4.3_0|
m35_1   &  S  m35#
m35_2   &  R  m35#
m36     #    ~m35_2&    m37_1&    QX4.4_0|
m36_1   &  S  m36#
m36_2   &  R  m36#
m37     #    ~m36_2&    m38_1&    QX4.5_0|
m37_1   &  S  m37#
m37_2   &  R  m37#
m38     #    ~m37_2&    m39_1&    QX4.6_0|
m38_1   &  S  m38#
m38_2   &  R  m38#
m39     #    ~m38_2&    m40_1&    QX4.7_0|
m39_1   &  S  m39#
m39_2   |  R  m39#
m3_1    &  S  m3#
m3_2    &  R  m3#
m4      #    ~m3_2&     m5_1&     QX0.4_0|
m40     #    ~m32_1|    m32_2&    m33_2&   ~m33_1&    m34_2&   ~m34_1&    m35_2&   ~m35_1&
              m36_2&   ~m36_1&    m37_2&   ~m37_1&    m38_2&   ~m38_1&    m39_2|   ~m39_1&
              m40_2&   ~m40_1&    QX5.0_0|
m40_1   &  S  m40#
m40_2   &  R  m40#
m48     #     m49_1&   ~m56_2&    QX6.0_0|
m48_1   |  S  m48#
m48_2   &  R  m48#
m49     #    ~m48_2&    m50_1&    QX6.1_0|
m49_1   &  S  m49#
m49_2   &  R  m49#
m4_1    &  S  m4#
m4_2    &  R  m4#
m5      #    ~m4_2&     m6_1&     QX0.5_0|
m50     #    ~m49_2&    m51_1&    QX6.2_0|
m50_1   &  S  m50#
m50_2   &  R  m50#
m51     #    ~m50_2&    m52_1&    QX6.3_0|
m51_1   &  S  m51#
m51_2   &  R  m51#
m52     #    ~m51_2&    m53_1&    QX6.4_0|
m52_1   &  S  m52#
m52_2   &  R  m52#
m53     #    ~m52_2&    m54_1&    QX6.5_0|
m53_1   &  S  m53#
m53_2   &  R  m53#
m54     #    ~m53_2&    m55_1&    QX6.6_0|
m54_1   &  S  m54#
m54_2   &  R  m54#
m55     #    ~m54_2&    m56_1&    QX6.7_0|
m55_1   &  S  m55#
m55_2   |  R  m55#
m56     #    ~m48_1|    m48_2&    m49_2&   ~m49_1&    m50_2&   ~m50_1&    m51_2&   ~m51_1&
              m52_2&   ~m52_1&    m53_2&   ~m53_1&    m54_2&   ~m54_1&    m55_2|   ~m55_1&
              m56_2&   ~m56_1&    QX7.0_0|
m56_1   &  S  m56#
m56_2   &  R  m56#
m5_1    &  S  m5#
m5_2    &  R  m5#
m6      #    ~m5_2&     m7_1&     QX0.6_0|
m6_1    &  S  m6#
m6_2    &  R  m6#
m7      #    ~m6_2&     m8_1&     QX0.7_0|
m7_1    &  S  m7#
m7_2    |  R  m7#
m8      #    ~m0_1|     m0_2&     m1_2&    ~m1_1&     m2_2&    ~m2_1&     m3_2&    ~m3_1&
              m4_2&    ~m4_1&     m5_2&    ~m5_1&     m6_2&    ~m6_1&     m7_2|    ~m7_1&
              m8_2&    ~m8_1&     QX1.0_0|
m8_1    &  S  m8#
m8_2    &  R  m8#
t       !  !  b0_4&   b1_4&   b2_4&   b3_4&
t_1     |  T  t!

******* NET STATISTICS  ************************

ARN	+      4 blocks
AND	&     72 blocks
OR	|     53 blocks
FF	#     40 blocks
VF	>      4 blocks
INPW	[      4 blocks
INPX	<      2 blocks
CLK	:      5 blocks
TIM	!      1 blocks
ALIAS	@     40

TOTAL	     185 blocks
	     572 links

compiled by:
@(#)     $Id: icc.v,v 1.123 2008/09/06 01:32:56 jw Exp $ -O7

C OUTPUT: ./Test0/barb.c  (385 lines)
