/********************************************************************
 *
 *	bara.ica - vertical bar demo
 *
 *	with arrays to get variable length counters
 *
 *	QX0 outputs the value of a shift register made up of SR flip
 *	flops m0 to m7. These are clocked by an internally generated
 *	clock c0. It looks like running lights when displayed.
 *
 *	By changing the input IB1 the clocking speed on m0 to m7,
 *	which is output on QX0.0 to QX0.7 is set to IB1 * 50 ms.
 *	A value of 0 on input IB1 lets you clock the running
 *	lights manually via input IX0.0
 *
 *	Output QX2.0 indicates the direction of the running
 *	lights on QmX0 - just to show a bit of internal logic.
 *
 *******************************************************************/

use strict;
%define LAST 8

imm timer t = TIMER(TX0.4);

imm int d0 = IB[LAST/8];			// IB[LAST/8] =
imm bit f0 = IB[LAST/8];			// d0  =

imm bit b0 = D(~b0 & f0, t, d0) | CHANGE(IX0.0 & ~f0);
imm clock c0 = CLOCK(b0);

  FOR (int i = 0; i <= LAST; i++) {
imm bit m[i];
  }

m[0] = SR(~m[LAST]     , m[LAST] & ~m[1], c0);
  FOR (int i = 1; i <= LAST-2; i++) {
m[i] = SR(~m[LAST] & m[i-1], m[LAST] & ~m[i+1], c0);
  }
m[LAST-1] = SR(~m[LAST] & m[LAST-2], m[LAST]      , c0);
m[LAST] = SR(~m[LAST] & m[LAST-1], m[LAST] & ~m[0], c0);

  FOR (int i = 0; i <= LAST; i++) {
QX[i/8].[i%8] = m[i];
  }
