#!/bin/bash

########################################################################
#
#	make lists for immcc test
#
########################################################################

usage ()
{
    echo 'Usage:	'${0##*/}' [-h]' >&2
    echo '	-h	this help text' >&2
    echo 'make different lists in a Test directory' >&2
    echo '	p.lt	# all for copying' >&2
    echo '	pd.lt	# sources, includes and derived for comparing' >&2
    echo '	pe.lt	# executables only' >&2
    echo '	pc.lt	# C files only' >&2
    echo '	pi.lt	# ini files only' >&2
    echo '	pl.lt	# lst files only' >&2
    echo '	p6.lt	# lst6 files only' >&2
    echo '	pp.lt	# iC files only' >&2
    echo '	pa.lt	# iCa files only' >&2
    echo '	ps.lt	# iC source files *.ic *.ica and *.ih' >&2
    echo '	pg.lt	# exe .c .ini .lst - generated - may be deleted in source dir' >&2
    echo '	-g	pg.lt - exe .c .ini .lst .lst6 - generated including .lst6' >&2
    echo '	-n	pn.lt - exe .c .ini .lst .lst6 - generated corpses - no .ic to match' >&2
    echo '	$Id: ml,v 1.15 2008/08/08 20:21:53 jw Exp $' >&2
}

while [[ $# -gt 0 ]]; do
    case $1 in
    -)	shift; break;;
    -*)	option=${1#?}
	while [[ -n "$option" ]]; do
	    case "$option" in
	    g*) mklst -g6 *.ic > pg.lt	# generated files including .lst6
		exit;;
	    n*) mklst -n *.lst* *.ini > pn.lt	# corpses only
		exit;;
	    h*)	usage; exit 255;;
	    *) aflag="-$option"; break;;
	    esac
	    option=${option#?}
	done;;
    *)	break;;
    esac
    shift
done

mklst *.i[ch]* > p.lt	# all for copying
mklst -d *.i[ch]* > pd.lt	# sources, includes and derived for comparing
mklst -g *.ic* > pg.lt	# generated exe .c .ini .lst for deletion in source dir
mklst -e *.ic* > pe.lt	# executables only
mklst -c *.ic* > pc.lt	# C files only
mklst -i *.ic* > pi.lt	# ini files only
mklst -l *.ic* > pl.lt	# lst files only
mklst -6 *.ic* > p6.lt	# lst6 files only
mklst -p *.ic > pp.lt	# iC source files only
mklst -a *.ica > pa.lt	# iC source files only
mklst -s *.i[ch] > ps.lt	# iC source and include files only

if [[ -f Init.out ]]; then
    echo Init.out >> p.lt
    echo Init.out >> pd.lt
    echo Init.out >> pg.lt
fi

if [[ -f Init.out6 ]]; then
    echo Init.out6 >> p6.lt
    echo Init.out6 >> pg.lt
fi

if [[ -f ErrorMessages.err ]]; then
    echo ErrorMessages.err >> p.lt
    echo ErrorMessages.err >> pd.lt
    echo ErrorMessages.err >> pg.lt
fi
